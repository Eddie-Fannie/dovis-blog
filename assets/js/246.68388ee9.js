(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{520:function(s,t,a){"use strict";a.r(t);var n=a(10),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_1-编写高质量javascript的188个建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-编写高质量javascript的188个建议"}},[s._v("#")]),s._v(" 1. 编写高质量JavaScript的188个建议")]),s._v(" "),t("h2",{attrs:{id:"减少全局变量污染"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#减少全局变量污染"}},[s._v("#")]),s._v(" 减少全局变量污染")]),s._v(" "),t("blockquote",[t("p",[s._v("定义全局变量的三种方式：")]),s._v(" "),t("ol",[t("li",[s._v("在任何函数外面直接执行var语句")]),s._v(" "),t("li",[s._v("直接添加一个属性到全局对象上。在Web浏览器种，全局对象名为window。")]),s._v(" "),t("li",[s._v("直接使用未经声明的变量，以这种方式定义的全局变量被称为隐式的全局变量。")])])]),s._v(" "),t("h2",{attrs:{id:"注意数据类型的特殊性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意数据类型的特殊性"}},[s._v("#")]),s._v(" 注意数据类型的特殊性")]),s._v(" "),t("blockquote",[t("ol",[t("li",[t("p",[s._v("防止浮点数溢出")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0.30000000....")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("慎用Javascript类型自动转换")]),s._v(" "),t("ul",[t("li",[s._v("如果把非空对象用在逻辑运算环境中，则对象被转换为true")]),s._v(" "),t("li",[s._v("如果把对象用在数值运算环境中，则对象会被自动转换为数字，如果转换失败，则返回NaN。\n"),t("ol",[t("li",[s._v("空数组则转换为0")]),s._v(" "),t("li",[s._v("一个数字元素的数组则转化成该数字本身")]),s._v(" "),t("li",[s._v("如果多个数字元素或者仅包含一个非数字元素的数组，则转化成NaN")])])]),s._v(" "),t("li",[s._v("当对象用于字符串环境中，Js则调用toString()方法把对象转化为字符串再进行相关计算。")])])]),s._v(" "),t("li",[t("p",[s._v("正确检测数据类型")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("typeof null为object")]),s._v(" "),t("blockquote",[t("p",[s._v("原理是这样的。不同的对象在底层都表示为二进制，在javascript中二进制前三位都为0的话会被判断为object类型，")]),s._v(" "),t("p",[s._v("null的二进制表示全0，自然前三位也是0，所以执行typeof时会返回“object”")])])]),s._v(" "),t("li",[t("p",[s._v("对于对象或数组，可以使用constructor属性，该属性值引用的是原来构造该对象的函数。对于undefined和null特殊值就不能使用constructor属性，因为JS解释器会报出错误。")])]),s._v(" "),t("li",[t("p",[s._v("使用toString()方法检测把对象转换为字符串，返回的字符串形式如下：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("object "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n\tobject表示对象的通用类型，class表示对象的内部类型，内部类型的名称与该对象的构造函数名对应。\n\t用户自定义对象的class值为Object\n\t\n\t要获取对象的class值唯一方法是必须调用Object对象定义的默认toString()方法，所以不能直接调用对象的该方法。要调用Object对象定义的默认toString()方法，可以先调用Object.prototype.toString对象默认toString()函数，再调用该函数的apply()方法在想要检测的对象上执行。\n */")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toString\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//[object Date]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("避免使用parseInt")]),s._v(" "),t("blockquote",[t("p",[s._v("是一个将字符串转换为整数的函数，在开始转换时，parseInt会先查看位置0处的字符，不是有效字符就返回NaN。对于以0开头的数字字符串，该函数会把它作为八进制数字处理，先把它转换为数值，然后再转换为十进制数字返回。0x开头则转为十六进制")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("010")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//8")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v('parseInt可以接受一个基数作为参数，这样parseInt("09",10)结果为9')])])])])])]),s._v(" "),t("h2",{attrs:{id:"正确处理javascript特殊值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正确处理javascript特殊值"}},[s._v("#")]),s._v(" 正确处理Javascript特殊值")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("正确使用NaN和Infinity")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'number'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("使用"),t("code",[s._v("isFinite")]),s._v(" 函数能够检测NaN，正负无穷大。如果有限数值，或者可以转换为有限数值，那么将返回true。如果只是NaN，正负无穷大的数值，则返回false。不过该函数会把运算转换为一个数字。")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);