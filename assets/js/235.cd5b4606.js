(window.webpackJsonp=window.webpackJsonp||[]).push([[235],{507:function(t,e,s){"use strict";s.r(e);var a=s(10),v=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue面试相关问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue面试相关问题"}},[t._v("#")]),t._v(" vue面试相关问题")]),t._v(" "),e("h2",{attrs:{id:"vdom的key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vdom的key"}},[t._v("#")]),t._v(" vdom的key")]),t._v(" "),e("blockquote",[e("p",[t._v("更新子节点时，需要在"),e("code",[t._v("oldChildren")]),t._v("中循环去找一个节点。但是如果我们在模板中渲染列表时，为子节点设置了属性"),e("code",[t._v("key")]),t._v("，那么就生成了一个"),e("code",[t._v("key")]),t._v("对应着一个节点下标这样一个对象。也就是说，如果在节点设置了属性"),e("code",[t._v("key")]),t._v("，那么在"),e("code",[t._v("oldChildren")]),t._v("中找相同节点是，可以直接通过"),e("code",[t._v("key")]),t._v("拿到下标，从而拿到节点，根本不需要通过循环来查找节点。")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("需要使用 "),e("code",[t._v("key")]),t._v(" 来给每个节点做一个唯一标识， "),e("code",[t._v("Diff")]),t._v(" 算法就可以正确的识别此节点。作用主要是为了高效的更新虚拟 "),e("code",[t._v("DOM")]),t._v("。")]),t._v(" "),e("p",[t._v("如果不使用 "),e("code",[t._v("key")]),t._v("，"),e("code",[t._v("Vue")]),t._v("会使用一种最大限度减少动态元素并且尽可能的尝试修复/再利用相同类型元素的算法。使用"),e("code",[t._v("key")]),t._v("，它会基于"),e("code",[t._v("key")]),t._v("的变化重新排列元素顺序，并且会移除 "),e("code",[t._v("key")]),t._v(" 不存在的元素。")])]),t._v(" "),e("h2",{attrs:{id:"对mvvm的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对mvvm的理解"}},[t._v("#")]),t._v(" 对"),e("code",[t._v("MVVM")]),t._v("的理解")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("MVVM")]),t._v(" 是 "),e("code",[t._v("Model-View-ViewModel")]),t._v(" 的缩写。"),e("code",[t._v("Model")]),t._v("代表数据模型，也可以在"),e("code",[t._v("Model")]),t._v("中定义数据修改和操作的业务逻辑。"),e("code",[t._v("View")]),t._v(" 代表"),e("code",[t._v("UI")]),t._v(" 组件，它负责将数据模型转化成"),e("code",[t._v("UI")]),t._v(" 展现出来。"),e("code",[t._v("ViewModel")]),t._v(" 监听模型数据的改变和控制视图行为、处理用户交互，简单理解就是一个同步"),e("code",[t._v("View")]),t._v(" 和 "),e("code",[t._v("Model")]),t._v("的对象，连接"),e("code",[t._v("Model和View")]),t._v("。在"),e("code",[t._v("MVVM")]),t._v("架构下，"),e("code",[t._v("View")]),t._v(" 和 "),e("code",[t._v("Model")]),t._v(" 之间并没有直接的联系，而是通过"),e("code",[t._v("ViewModel")]),t._v("进行交互，"),e("code",[t._v("Model")]),t._v(" 和 "),e("code",[t._v("ViewModel")]),t._v(" 之间的交互是双向的， 因此"),e("code",[t._v("View")]),t._v(" 数据的变化会同步到"),e("code",[t._v("Model")]),t._v("中，而"),e("code",[t._v("Model")]),t._v(" 数据的变化也会立即反应到"),e("code",[t._v("View")]),t._v(" 上。"),e("code",[t._v("ViewModel")]),t._v(" 通过双向数据绑定把 "),e("code",[t._v("View")]),t._v(" 层和 "),e("code",[t._v("Model")]),t._v(" 层连接了起来，而"),e("code",[t._v("View")]),t._v(" 和 "),e("code",[t._v("Model")]),t._v(" 之间的同步工作完全是自动的，无需人为干涉，因此开发者只需关注业务逻辑，不需要手动操作"),e("code",[t._v("DOM")]),t._v(", 不需要关注数据状态的同步问题，复杂的数据状态维护完全由 "),e("code",[t._v("MVVM")]),t._v(" 来统一管理。")])]),t._v(" "),e("h2",{attrs:{id:"vue的生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue的生命周期"}},[t._v("#")]),t._v(" Vue的生命周期")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("beforeCreate")]),t._v("（创建前）：在数据观测和初始化事件还未开始。")]),t._v(" "),e("li",[e("code",[t._v("created")]),t._v("（创建后）： 完成数据观测，属性和方法的运算，初始化事件，"),e("code",[t._v("$el")]),t._v("属性还没有显示出来")]),t._v(" "),e("li",[e("code",[t._v("beforeMount")]),t._v("（载入前）： 在挂载开始之前被调用，相关的"),e("code",[t._v("render")]),t._v("函数首次被调用。实例已完成以下的配置：编译模板，把"),e("code",[t._v("data")]),t._v("里面的数据和模板生成"),e("code",[t._v("html")]),t._v("。注意此时还没有挂载"),e("code",[t._v("html")]),t._v("到页面上。"),e("strong",[e("code",[t._v("$el")]),t._v(" 为可用状态，但 "),e("code",[t._v("ref")]),t._v(" 仍不可用。")])]),t._v(" "),e("li",[e("code",[t._v("mounted")]),t._v("（载入后）： 在"),e("code",[t._v("el")]),t._v(" 被新创建的 "),e("code",[t._v("vm.$el")]),t._v(" 替换，并挂载到实例上去之后调用。实例已完成以下的配置：用上面编译好的"),e("code",[t._v("html")]),t._v("内容替换"),e("code",[t._v("el")]),t._v("属性指向的"),e("code",[t._v("DOM")]),t._v("对象。完成模板中的"),e("code",[t._v("html")]),t._v("渲染到"),e("code",[t._v("html")]),t._v("页面中。此过程中进行"),e("code",[t._v("ajax")]),t._v("交互。")]),t._v(" "),e("li",[e("code",[t._v("beforeUpdate")]),t._v("（更新前）： 在数据更新之前调用，发生在虚拟"),e("code",[t._v("DOM")]),t._v("重新渲染和打补丁之前。可以在该钩子中进一步地更改状态，不会触发附加的重渲染过程。")]),t._v(" "),e("li",[e("code",[t._v("updated")]),t._v("（更新后）： 在由于数据更改导致的虚拟"),e("code",[t._v("DOM")]),t._v("重新渲染和打补丁之后调用。调用时，组件"),e("code",[t._v("DOM")]),t._v("已经更新，所以可以执行依赖于"),e("code",[t._v("DOM")]),t._v("的操作。然而在大多数情况下，应该避免在此期间更改状态，因为这可能会导致更新无限循环。该钩子在服务器端渲染期间不被调用。")]),t._v(" "),e("li",[e("code",[t._v("beforeDestroy")]),t._v("（销毁前）： 在实例销毁之前调用。实例仍然完全可用。"),e("strong",[t._v("此阶段适合在更新之前访问现有的 "),e("code",[t._v("DOM")]),t._v("，比如手动移除已添加的事件监听器。"),e("code",[t._v("ref")]),t._v("能使用")])]),t._v(" "),e("li",[e("code",[t._v("destroyed")]),t._v("（销毁后）： 在实例销毁之后调用。调用后，所有的事件监听器会被移除，所有的子实例也会被销毁。该钩子在服务器端渲染期间不被调用。"),e("strong",[e("code",[t._v("ref")]),t._v(" 状态为 "),e("code",[t._v("undefined")]),t._v("。")])])]),t._v(" "),e("h2",{attrs:{id:"vue实现数据双向绑定的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue实现数据双向绑定的原理"}},[t._v("#")]),t._v(" Vue实现数据双向绑定的原理")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("vue")]),t._v("实现数据双向绑定主要是：采用"),e("strong",[t._v("数据劫持结合发布者-订阅者模式")]),t._v("的方式，通过"),e("code",[t._v("Object.defineProperty（）")]),t._v("来劫持各个属性的"),e("code",[t._v("setter，getter")]),t._v("，在数据变动时发布消息给订阅者，触发相应监听回调。")])]),t._v(" "),e("blockquote",[e("p",[t._v("当把一个普通 "),e("code",[t._v("Javascript")]),t._v(" 对象传给 "),e("code",[t._v("Vue")]),t._v(" 实例来作为它的 "),e("code",[t._v("data")]),t._v(" 选项时，"),e("code",[t._v("Vue")]),t._v(" 将遍历它的属性，用 "),e("code",[t._v("Object.defineProperty")]),t._v(" 将它们转为 "),e("code",[t._v("getter/setter")]),t._v("。用户看不到 "),e("code",[t._v("getter/setter")]),t._v("，但是在内部它们让 "),e("code",[t._v("Vue")]),t._v(" 追踪依赖，在属性被访问和修改时通知变化。")])]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("vue")]),t._v("的数据双向绑定 将"),e("code",[t._v("MVVM")]),t._v("作为数据绑定的入口，整合"),e("code",[t._v("Observer")]),t._v("，"),e("code",[t._v("Compile")]),t._v("和"),e("code",[t._v("Watcher")]),t._v("三者，通过"),e("code",[t._v("Observer")]),t._v("来监听自己的"),e("code",[t._v("model")]),t._v("的数据变化，通过"),e("code",[t._v("Compile")]),t._v("来解析编译模板指令（"),e("code",[t._v("vue")]),t._v("中是用来解析 "),e("code",[t._v("{{}}")]),t._v("），最终利用"),e("code",[t._v("watcher")]),t._v("（更新函数）搭起"),e("code",[t._v("observer")]),t._v("和"),e("code",[t._v("Compile")]),t._v("之间的通信桥梁，达到数据变化 —>视图更新；视图交互变化（"),e("code",[t._v("input")]),t._v("）—>数据"),e("code",[t._v("model")]),t._v("变更双向绑定效果。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"/dovis-blog/other/21.png",alt:"img"}})]),t._v(" "),e("p",[e("strong",[t._v("实现简单的双向绑定")])]),t._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("txt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("show"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    \n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" domContainer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'show'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" inputContainer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'txt'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" object "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nObject"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'txt'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        inputContainer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newValue\n        domContainer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newValue\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'keyup'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Oberver（数据监听器/发布者）")]),t._v("：负责对数据对象对所有属性进行监听（数据劫持），监听到数据发生变化后通知订阅者。")]),t._v(" "),e("li",[e("code",[t._v("Compiler")]),t._v("指令解析器：扫描模版，并对指令进行解析，然后绑定指定事件。")]),t._v(" "),e("li",[e("code",[t._v("Watcher")]),t._v("订阅者：关联前两个，能够订阅并收到属性变动通知，执行指令绑定的相应操作，更新视图。"),e("code",[t._v("Update()")]),t._v("自身一个方法，用于执行"),e("code",[t._v("Compiler")]),t._v("中绑定的回调，更新视图。")])])]),t._v(" "),e("h2",{attrs:{id:"route和-router区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#route和-router区别"}},[t._v("#")]),t._v(" "),e("code",[t._v("$route和$router")]),t._v("区别")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("$route")]),t._v("是“路由信息对象”，包括"),e("code",[t._v("path，params，hash，query，fullPath，matched，name")]),t._v("等路由信息参数。而"),e("code",[t._v("$router")]),t._v("是“路由实例”对象包括了路由的跳转方法，钩子函数等。")])]),t._v(" "),e("h2",{attrs:{id:"计算属性的好处"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计算属性的好处"}},[t._v("#")]),t._v(" 计算属性的好处")]),t._v(" "),e("ol",[e("li",[t._v("使得数据处理结构清晰；")]),t._v(" "),e("li",[t._v("依赖于数据，数据更新，处理结果自动更新；")]),t._v(" "),e("li",[t._v("计算属性内部"),e("code",[t._v("this")]),t._v("指向"),e("code",[t._v("vm")]),t._v("实例；")]),t._v(" "),e("li",[t._v("在"),e("code",[t._v("template")]),t._v("调用时，直接写计算属性名即可；")]),t._v(" "),e("li",[t._v("常用的是"),e("code",[t._v("getter")]),t._v("方法，获取数据，也可以使用"),e("code",[t._v("set")]),t._v("方法改变数据；")]),t._v(" "),e("li",[t._v("相较于"),e("code",[t._v("methods")]),t._v("，不管依赖的数据变不变，"),e("code",[t._v("methods")]),t._v("都会重新计算，但是依赖数据不变的时候"),e("code",[t._v("computed")]),t._v("从缓存中获取，不会重新计算。")])]),t._v(" "),e("h2",{attrs:{id:"delete和vue-delete删除数组的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delete和vue-delete删除数组的区别"}},[t._v("#")]),t._v(" "),e("code",[t._v("delete")]),t._v("和"),e("code",[t._v("Vue.delete")]),t._v("删除数组的区别")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("delete")]),t._v("只是被删除的元素变成了 "),e("code",[t._v("empty/undefined")]),t._v(" 其他的元素的键值还是不变。"),e("code",[t._v("Vue.delete")]),t._v("直接删除数组，改变了数组的键值。")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("delete")]),t._v("知识点补充：\n"),e("ul",[e("li",[e("code",[t._v("delete")]),t._v(" 操作符用来删除一个对象的属性。")]),t._v(" "),e("li",[e("code",[t._v("delete")]),t._v("在删除一个不可配置的属性时在严格模式和非严格模式下的区别:")])]),t._v(" "),e("ol",[e("li",[t._v("在严格模式中，如果属性是一个不可配置（non-configurable）属性，删除时会抛出异常;")]),t._v(" "),e("li",[t._v("非严格模式下返回 "),e("code",[t._v("false")]),t._v("。")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("delete")]),t._v("能删除的：")])]),t._v(" "),e("ol",[e("li",[t._v("可配置对象的属性")]),t._v(" "),e("li",[t._v("隐式声明的全局变量(这个全局变量其实是"),e("code",[t._v("global")]),t._v("对象("),e("code",[t._v("window")]),t._v(")的属性)")]),t._v(" "),e("li",[t._v("用户定义的属性")]),t._v(" "),e("li",[t._v("在ECMAScript 6中，通过 "),e("code",[t._v("const")]),t._v(" 或 "),e("code",[t._v("let")]),t._v(" 声明指定的 "),e("code",[t._v('"temporal dead zone" (TDZ)')]),t._v(" 对 "),e("code",[t._v("delete")]),t._v(" 操作符也会起作用")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("delete")]),t._v("不能删除：")])]),t._v(" "),e("ol",[e("li",[t._v("显式声明的全局变量")]),t._v(" "),e("li",[t._v("内置对象的内置属性")]),t._v(" "),e("li",[t._v("一个对象从原型继承而来的属性")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("delete")]),t._v("删除数组元素：")])]),t._v(" "),e("ol",[e("li",[t._v("当你删除一个数组元素时，数组的 "),e("code",[t._v("length")]),t._v(" 属性并不会变小，数组元素变成"),e("code",[t._v("undefined")])]),t._v(" "),e("li",[t._v("当用 "),e("code",[t._v("delete")]),t._v(" 操作符删除一个数组元素时，被删除的元素已经完全不属于该数组。")]),t._v(" "),e("li",[t._v("如果你想让一个数组元素的值变为 "),e("code",[t._v("undefined")]),t._v(" 而不是删除它，可以使用 "),e("code",[t._v("undefined")]),t._v(" 给其赋值而不是使用 "),e("code",[t._v("delete")]),t._v(" 操作符。此时数组元素是在数组中的")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("delete")]),t._v(" 操作符与直接释放内存（只能通过解除引用来间接释放）没有关系。")])])])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1,2,empty,4]")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])])]),t._v(" "),e("h2",{attrs:{id:"vue的template编译"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue的template编译"}},[t._v("#")]),t._v(" Vue的"),e("code",[t._v("template")]),t._v("编译")]),t._v(" "),e("blockquote",[e("p",[t._v("简而言之，就是先转化成"),e("code",[t._v("AST")]),t._v("树，再得到的"),e("code",[t._v("render")]),t._v("函数返回"),e("code",[t._v("VNode")]),t._v("（"),e("code",[t._v("Vue")]),t._v("的虚拟"),e("code",[t._v("DOM")]),t._v("节点），详细步骤如下：")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("首先，通过"),e("code",[t._v("compile")]),t._v("编译器把"),e("code",[t._v("template")]),t._v("编译成"),e("code",[t._v("AST")]),t._v("语法树（"),e("code",[t._v("abstract syntax tree")]),t._v(" 即 源代码的抽象语法结构的树状表现形式），"),e("code",[t._v("compile")]),t._v("是"),e("code",[t._v("createCompiler")]),t._v("的返回值，"),e("code",[t._v("createCompiler")]),t._v("是用以创建编译器的。另外"),e("code",[t._v("compile")]),t._v("还负责合并"),e("code",[t._v("option")]),t._v("。")])]),t._v(" "),e("li",[e("p",[t._v("然后，"),e("code",[t._v("AST")]),t._v("会经过"),e("code",[t._v("generate")]),t._v("（将"),e("code",[t._v("AST")]),t._v("语法树转化成"),e("code",[t._v("render funtion")]),t._v("字符串的过程）得到"),e("code",[t._v("render")]),t._v("函数，"),e("code",[t._v("render")]),t._v("的返回值是"),e("code",[t._v("VNode")]),t._v("，"),e("code",[t._v("VNode")]),t._v("是"),e("code",[t._v("Vue")]),t._v("的虚拟"),e("code",[t._v("DOM")]),t._v("节点，里面有（标签名、子节点、文本等等）")])])])]),t._v(" "),e("h2",{attrs:{id:"sync修饰符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sync修饰符"}},[t._v("#")]),t._v(" "),e("code",[t._v("sync")]),t._v("修饰符")]),t._v(" "),e("blockquote",[e("p",[t._v("作为一个编译时的语法糖存在。它会被扩展为一个自动更新父组件属性的 "),e("code",[t._v("v-on")]),t._v(" 监听器。")])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("comp "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("foo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sync"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("comp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 扩展为：")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("comp "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("foo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v(" @update"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("foo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"val => bar = val"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("comp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当子组件需要更新 foo 的值时，它需要显式地触发一个更新事件：")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'update:foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h2",{attrs:{id:"vue-router实现路由懒加载-动态加载路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-router实现路由懒加载-动态加载路由"}},[t._v("#")]),t._v(" vue-router实现路由懒加载（动态加载路由）")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("vue")]),t._v("异步组件技术 ==== 异步加载，"),e("code",[t._v("vue-router")]),t._v("配置路由 , 使用"),e("code",[t._v("vue")]),t._v("的异步组件技术 , 可以实现按需加载 .但是,这种情况下一个组件生成一个js文件。")]),t._v(" "),e("li",[t._v("路由懒加载(使用"),e("code",[t._v("import")]),t._v(")。")]),t._v(" "),e("li",[e("code",[t._v("webpack")]),t._v("提供的"),e("code",[t._v("require.ensure()")]),t._v("，"),e("code",[t._v("vue-router")]),t._v("配置路由，使用"),e("code",[t._v("webpack")]),t._v("的"),e("code",[t._v("require.ensure")]),t._v("技术，也可以实现按需加载。这种情况下，多个路由指定相同的"),e("code",[t._v("chunkNam")]),t._v("，会合并打包成一个"),e("code",[t._v("js")]),t._v("文件。")])])]),t._v(" "),e("h2",{attrs:{id:"vue中判断用户首次进入页面还是刷新页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue中判断用户首次进入页面还是刷新页面"}},[t._v("#")]),t._v(" vue中判断用户首次进入页面还是刷新页面")]),t._v(" "),e("p",[e("img",{attrs:{src:"/dovis-blog/other/54.png",alt:"img"}})]),t._v(" "),e("h2",{attrs:{id:"vue的mixin合并策略-vue-extend也是"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue的mixin合并策略-vue-extend也是"}},[t._v("#")]),t._v(" vue的Mixin合并策略（"),e("code",[t._v("Vue.extend")]),t._v("也是)")]),t._v(" "),e("p",[t._v("当组件和混入对象含有同名选项时，这些选项将以恰当的方式进行“合并”。比如数据对象在内部会进行递归合并，并在发生冲突时以组件数据优先。")]),t._v(" "),e("ul",[e("li",[t._v("同名钩子函数将合并为一个数组，因此都将被调用。另外，混入对象的钩子将在组件自身钩子之前调用。")]),t._v(" "),e("li",[t._v("值为对象的选项，如"),e("code",[t._v("methods/components/directives")]),t._v("将被合并同一个对象。两个对象键名冲突时，取组件对象的键值对。")])]),t._v(" "),e("h2",{attrs:{id:"v-model原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-model原理"}},[t._v("#")]),t._v(" v-model原理")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("我们在 "),e("code",[t._v("vue")]),t._v(" 项目中主要使用 "),e("code",[t._v("v-model")]),t._v(" 指令在表单 "),e("code",[t._v("input、textarea、select")]),t._v(" 等元素上创建双向数据绑定，我们知道 "),e("code",[t._v("v-model")]),t._v(" 本质上不过是语法糖，"),e("code",[t._v("v-model")]),t._v(" 在内部为不同的输入元素使用不同的属性并抛出不同的事件。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("text")]),t._v(" 和 "),e("code",[t._v("textarea")]),t._v(" 元素使用 "),e("code",[t._v("value")]),t._v(" 属性和 "),e("code",[t._v("input")]),t._v(" 事件；")]),t._v(" "),e("li",[e("code",[t._v("checkbox")]),t._v("和"),e("code",[t._v("radio")]),t._v("使用"),e("code",[t._v("checked")]),t._v("属性和"),e("code",[t._v("change")]),t._v("事件")]),t._v(" "),e("li",[e("code",[t._v("select")]),t._v("字段符"),e("code",[t._v("value")]),t._v("作为"),e("code",[t._v("prop")]),t._v("并将"),e("code",[t._v("change")]),t._v("作为事件。")])])]),t._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("something"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    \n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("value")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("something"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("input")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("something = $event.target.value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("如果在自定义组件中，"),e("code",[t._v("v-model")]),t._v(" 默认会利用名为 "),e("code",[t._v("value")]),t._v(" 的 "),e("code",[t._v("prop")]),t._v(" 和名为 "),e("code",[t._v("input")]),t._v(" 的事件")]),t._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[t._v("父组件：\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ModelChild")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ModelChild")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n子组件：\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{value}}"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\nprops:{\n    value: String\n},\nmethods: {\n  test1(){\n     this.$emit('input', '小红')\n  },\n}\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("h2",{attrs:{id:"keep-alive的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive的理解"}},[t._v("#")]),t._v(" "),e("code",[t._v("keep-alive")]),t._v("的理解")]),t._v(" "),e("p",[e("code",[t._v("keep-alive")]),t._v(" 是 "),e("code",[t._v("Vue")]),t._v(" 内置的一个组件，可以使被包含的组件保留状态，避免重新渲染 ，其有以下特性：")]),t._v(" "),e("ul",[e("li",[t._v("一般结合路由和动态组件一起使用，用于缓存组件；")]),t._v(" "),e("li",[t._v("提供 "),e("code",[t._v("include")]),t._v(" 和 "),e("code",[t._v("exclude")]),t._v(" 属性，两者都支持字符串或正则表达式， "),e("code",[t._v("include")]),t._v(" 表示只有名称匹配的组件会被缓存，"),e("code",[t._v("exclude")]),t._v(" 表示任何名称匹配的组件都不会被缓存 ，其中 "),e("code",[t._v("exclude")]),t._v(" 的优先级比 "),e("code",[t._v("include")]),t._v(" 高；")]),t._v(" "),e("li",[t._v("对应两个钩子函数 "),e("code",[t._v("activated")]),t._v(" 和 "),e("code",[t._v("deactivated")]),t._v(" ，当组件被激活时，触发钩子函数 "),e("code",[t._v("activated")]),t._v("，当组件被移除时，触发钩子函数 "),e("code",[t._v("deactivated")])])]),t._v(" "),e("h2",{attrs:{id:"vue-路由中-hash-模式和-history-模式区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-路由中-hash-模式和-history-模式区别"}},[t._v("#")]),t._v(" vue 路由中 hash 模式和 history 模式区别")]),t._v(" "),e("p",[e("code",[t._v("hash")]),t._v(" 模式：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("hash")]),t._v(" 出现在 "),e("code",[t._v("URL")]),t._v(" 中，但不会被包含在 "),e("code",[t._v("http")]),t._v(" 请求中，对后端完全没有影响，因此改变"),e("code",[t._v("hash")]),t._v(" 不会重新加载页面。")])]),t._v(" "),e("p",[e("code",[t._v("history")]),t._v("模式：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("history")]),t._v(" 利用了 "),e("code",[t._v("html5 history")]),t._v(" 中新增的 "),e("code",[t._v("pushState()")]),t._v("和"),e("code",[t._v("replaceState()")]),t._v(" 方法。这两个方法应用于浏览器记录栈，在当前已有的"),e("code",[t._v("back、forward、go")]),t._v("基础之上，它们提供了对历史记录修改的功能。只是当它们执行修改时，虽然改变了当前的"),e("code",[t._v("URL")]),t._v("，但浏览器不会立即向后端发送请求。")])]),t._v(" "),e("h2",{attrs:{id:"vue2-和-vue3-区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue2-和-vue3-区别"}},[t._v("#")]),t._v(" vue2 和 vue3 区别")]),t._v(" "),e("ol",[e("li",[t._v("响应式")])]),t._v(" "),e("ul",[e("li",[t._v("2.x 的响应式是基于"),e("code",[t._v("Object.defineProperty")]),t._v("实现的代理，能够监听数据对象的变化，但是监听不到对象属性的增删，数组元素和长度变化，同时"),e("code",[t._v("Vue")]),t._v("初始化的时候会把所有"),e("code",[t._v("Observer")]),t._v("建立，实现数据视图与数据的响应式更新，底层需要"),e("code",[t._v("Observer")]),t._v("的支持，所以需要"),e("code",[t._v("Observer")]),t._v("都建立好，才能观察到数据对象的变化。")]),t._v(" "),e("li",[t._v("3.0 中使用 "),e("code",[t._v("es6")]),t._v(" 的"),e("code",[t._v("Proxy")]),t._v("来代替"),e("code",[t._v("Object.defineProperty")]),t._v("，在目标对象之上架一层拦截，代理的是对象而不是对象的属性。这样可以将原本对象属性的操作变为对整个对象的操作，可以监听到对象的属性的增删和数组长度的变化，还可以监听"),e("code",[t._v("Map,Set,WeakMap,WeakSet")]),t._v("等，同时实现了惰性监听，即不会再初始化的时候创建所有"),e("code",[t._v("observer")]),t._v("，而是会在用到的时候再监听。")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("模板\n2.x的机制导致作用域插槽变了，父组件会重新渲染，而3.0把作用域插槽改成了函数的方式，这样只会影响子组件的重新渲染，提升渲染性能。")])])])}),[],!1,null,null,null);e.default=v.exports}}]);