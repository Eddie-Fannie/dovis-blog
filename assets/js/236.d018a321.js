(window.webpackJsonp=window.webpackJsonp||[]).push([[236],{508:function(v,_,t){"use strict";t.r(_);var e=t(10),s=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"前端面试其他常见问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端面试其他常见问题"}},[v._v("#")]),v._v(" 前端面试其他常见问题")]),v._v(" "),_("h2",{attrs:{id:"_1-url的输入到看到页面发生了什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-url的输入到看到页面发生了什么"}},[v._v("#")]),v._v(" 1.URL的输入到看到页面发生了什么？")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("p",[_("code",[v._v("URL")]),v._v("(统一资源定位符，用于定位互联网上的资源)")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("scheme://host.domain:port/path/filename")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("scheme")]),v._v("：定义因特网服务类型。常见有"),_("code",[v._v("http")]),v._v("、"),_("code",[v._v("https")]),v._v("、"),_("code",[v._v("file")]),v._v("、"),_("code",[v._v("ftp")])]),v._v(" "),_("li",[_("code",[v._v("host")]),v._v("：定义域主机")]),v._v(" "),_("li",[_("code",[v._v("domain")]),v._v("：定义因特网域名")]),v._v(" "),_("li",[_("code",[v._v("port")]),v._v("：定义主机端口，"),_("code",[v._v("http")]),v._v("默认端口为"),_("code",[v._v("80")]),v._v("，"),_("code",[v._v("https")]),v._v("为"),_("code",[v._v("443")])]),v._v(" "),_("li",[_("code",[v._v("path")]),v._v("：定义服务器上的路径（如果省略代表文档在网站根目录中）")]),v._v(" "),_("li",[_("code",[v._v("filename")]),v._v("：定义文档/资源的名称")])])])])]),v._v(" "),_("blockquote",[_("p",[v._v("用户输入首先判断地址栏输入的关键字类别，是搜索内容还是请求的"),_("code",[v._v("URL")]),v._v("。如果是搜索内容，地址栏会使用浏览器默认的搜索引擎，来合成新的带搜索关键字的"),_("code",[v._v("URL")]),v._v("。如果判断输入内容符合"),_("code",[v._v("URL")]),v._v("规则，那么地址栏会根据规则把这段内容加上协议，合成完整的"),_("code",[v._v("URL")]),v._v("。标签页上的图标进入加载状态。")])]),v._v(" "),_("p",[v._v("浏览器进程会通过进程间通信把"),_("code",[v._v("URL")]),v._v("请求发送到网络进程，网络进程接收到后会发起真正的"),_("code",[v._v("URL")]),v._v("请求过程。")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("网络进程会查找本地缓存是否缓存了资源，如果有缓存则返回给浏览器进程，没有则进入网络请求进程。")])]),v._v(" "),_("li",[_("p",[_("a",{attrs:{href:"/another/Net/DNS%E5%88%9D%E8%AF%86"}},[v._v("DNS解析（域名解析）")])])])]),v._v(" "),_("p",[v._v("一个递归过程\n"),_("img",{attrs:{src:"/dovis-blog/other/7.png",alt:"img"}})]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("发送TCP连接")])]),v._v(" "),_("blockquote",[_("p",[v._v("三次握手")])]),v._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[v._v("发送"),_("code",[v._v("HTTP")]),v._v("请求")])]),v._v(" "),_("blockquote",[_("p",[v._v("发送"),_("code",[v._v("HTTP")]),v._v("请求的过程就是构建"),_("code",[v._v("HTTP")]),v._v("请求报文并通过"),_("code",[v._v("TCP")]),v._v("协议中发送到服务器指定端口 请求报文由"),_("strong",[v._v("请求行")]),v._v("，"),_("strong",[v._v("请求报头")]),v._v("，"),_("strong",[v._v("请求正文")]),v._v("组成")])]),v._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[v._v("服务器处理请求并返回"),_("code",[v._v("HTTP")]),v._v("报文")])]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("ul",[_("li",[v._v("发送 "),_("code",[v._v("HTTP")]),v._v(" 请求：一旦 "),_("code",[v._v("TCP")]),v._v(" 连接建立成功，浏览器就可以向服务器发送 "),_("code",[v._v("HTTP")]),v._v(" 请求。该请求中包含了一些必要的信息，例如请求方法、"),_("code",[v._v("URL")]),v._v("、请求头、请求体等。")]),v._v(" "),_("li",[v._v("服务器响应 "),_("code",[v._v("HTTP")]),v._v(" 请求：服务器收到 "),_("code",[v._v("HTTP")]),v._v(" 请求后，会根据请求中的信息进行相应的处理，并生成一个 "),_("code",[v._v("HTTP")]),v._v(" 响应。该响应中包含了一些必要的信息，例如响应状态码、响应头、响应体等。")]),v._v(" "),_("li",[v._v("接收 "),_("code",[v._v("HTTP")]),v._v(" 响应：一旦服务器生成了 "),_("code",[v._v("HTTP")]),v._v(" 响应，它就会通过 "),_("code",[v._v("TCP")]),v._v(" 连接发送给浏览器。浏览器接收到 "),_("code",[v._v("HTTP")]),v._v(" 响应后，会进行相应的处理，例如解析响应头、响应体等。")])])]),v._v(" "),_("ol",{attrs:{start:"6"}},[_("li",[v._v("浏览器解析渲染页面")])]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("p",[v._v("准备渲染进程，通常情况下打开新的页面会使用单独的渲染进程。如果从A页面打开B页面且在同一个站点下，那么B页面会复用A的渲染进程；如果是其他情况浏览器进程会为B创建一个新的渲染进程。"),_("strong",[v._v("渲染进程准备好之后，还不能立即进入文档解析状态，因为此时的文档数目在网络进程中，并没有提交给渲染进程，所以下一步进入提交文档的阶段。")])]),v._v(" "),_("p",[v._v("提交文档，文档指"),_("code",[v._v("URL")]),v._v("请求的响应体数据。提交文档的信息由浏览器进程发出，渲染进程收到提交文档的信息后，会和网络进程建立传输数据的管道。等文档数据传输完成之后，渲染进程会返回确认提交的信息给浏览器进程。浏览器进程在收到确认提交的信息后，会更新浏览器界面状态，包括了安全状态，地址栏的"),_("code",[v._v("URL")]),v._v("，前进后退的状态，并更新页面。")])]),v._v(" "),_("ol",{attrs:{start:"7"}},[_("li",[v._v("连接结束")])]),v._v(" "),_("blockquote",[_("p",[v._v("四次挥手")])]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("p",[v._v("详细的网页加载过程")]),v._v(" "),_("ol",[_("li",[v._v("处理输入")])]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("UI thread")]),v._v("判断是关键词搜索还是"),_("code",[v._v("URL")])])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("开始导航")])]),v._v(" "),_("blockquote",[_("p",[v._v("回车后，"),_("code",[v._v("UI thread")]),v._v("将输入的内容交给网络线程"),_("code",[v._v("Network thread")]),v._v("，此时UI线程使"),_("code",[v._v("Tab")]),v._v("前图标展示为加载中状态，然后网络进程进行一系列诸如"),_("code",[v._v("DNS")]),v._v("寻址，建立"),_("code",[v._v("TLS")]),v._v("连接等操作进行资源请求，如果收到服务器的"),_("code",[v._v("301")]),v._v("重定向响应，它就会告知UI线程进行重定向然后它会再次发起一个新的网络请求。")])]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("读取响应")])]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("network thread")]),v._v("接收到服务器的响应后，开始解析"),_("code",[v._v("HTTP")]),v._v("响应报文，然后根据响应头中的"),_("code",[v._v("Content-Type")]),v._v("字段来确定响应主体的媒体类型（"),_("code",[v._v("MIME Type")]),v._v("），如果媒体类型是一个"),_("code",[v._v("HTML")]),v._v("文件，则将响应数据交给渲染进程（"),_("code",[v._v("renderer process")]),v._v("）来进行下一步的工作，如果是 "),_("code",[v._v("zip")]),v._v(" 文件或者其它文件，会把相关数据传输给下载管理器。")]),v._v(" "),_("p",[v._v("与此同时，浏览器会进行 "),_("code",[v._v("Safe Browsing")]),v._v(" 安全检查，如果域名或者请求内容匹配到已知的恶意站点，"),_("code",[v._v("network thread")]),v._v(" 会展示一个警告页。除此之外，网络线程还会做 "),_("code",[v._v("CORB（Cross Origin Read Blocking）")]),v._v("检查来确定那些敏感的跨站数据不会被发送至渲染进程。")])]),v._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[v._v("查找渲染进程")])]),v._v(" "),_("blockquote",[_("p",[v._v("各种检查完毕以后，"),_("code",[v._v("network thread")]),v._v(" 确信浏览器可以导航到请求网页，"),_("code",[v._v("network thread")]),v._v(" 会通知 "),_("code",[v._v("UI thread")]),v._v(" 数据已经准备好，"),_("code",[v._v("UI thread")]),v._v(" 会查找到一个 "),_("code",[v._v("renderer process")]),v._v(" 进行网页的渲染。")]),v._v(" "),_("p",[v._v("浏览器为了对查找渲染进程这一步骤进行优化，考虑到网络请求获取响应需要时间，所以在第二步开始，浏览器已经预先查找和启动了一个渲染进程，如果中间步骤一切顺利，当 "),_("code",[v._v("network thread")]),v._v(" 接收到数据时，渲染进程已经准备好了，但是如果遇到重定向，这个准备好的渲染进程也许就不可用了，这个时候会重新启动一个渲染进程。")])]),v._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[v._v("提交导航")])]),v._v(" "),_("blockquote",[_("p",[v._v("到了这一步，数据和渲染进程都准备好了，"),_("code",[v._v("Browser Process")]),v._v(" 会向 "),_("code",[v._v("Renderer Process")]),v._v(" 发送"),_("code",[v._v("IPC")]),v._v("消息来确认导航，此时，浏览器进程将准备好的数据发送给渲染进程，渲染进程接收到数据之后，又发送"),_("code",[v._v("IPC")]),v._v("消息给浏览器进程，告诉浏览器进程导航已经提交了，页面开始加载。")]),v._v(" "),_("p",[v._v("这个时候导航栏会更新，安全指示符更新（地址前面的小锁），访问历史列表（"),_("code",[v._v("history tab")]),v._v("）更新，即可以通过前进后退来切换该页面。")])]),v._v(" "),_("ol",{attrs:{start:"6"}},[_("li",[v._v("初始化加载完成")])]),v._v(" "),_("blockquote",[_("p",[v._v("当导航提交完成后，渲染进程开始加载资源及渲染页面，当页面渲染完成后（页面及内部的"),_("code",[v._v("iframe")]),v._v("都触发了"),_("code",[v._v("onload")]),v._v("事件），会向浏览器进程发送"),_("code",[v._v("IPC")]),v._v("消息，告知浏览器进程，这个时候"),_("code",[v._v("UI thread")]),v._v("会停止展示"),_("code",[v._v("tab")]),v._v("中的加载中图标。")])])]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("p",[v._v("网页渲染原理：")]),v._v(" "),_("ul",[_("li",[v._v("渲染进程中的多个线程：\n"),_("ul",[_("li",[v._v("一个主线程")]),v._v(" "),_("li",[v._v("多个工作线程")]),v._v(" "),_("li",[v._v("一个合成器线程")]),v._v(" "),_("li",[v._v("多个光栅化线程")])])])]),v._v(" "),_("ol",[_("li",[v._v("构建DOM")])]),v._v(" "),_("blockquote",[_("p",[v._v("当渲染进程接受到导航的确认信息后，开始接受来自浏览器进程的数据，这个时候，主线程会解析数据转化为"),_("code",[v._v("DOM（Document Object Model）")]),v._v("对象。")])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("子资源加载")])]),v._v(" "),_("blockquote",[_("p",[v._v("在构建"),_("code",[v._v("DOM")]),v._v("的过程中，会解析到图片、"),_("code",[v._v("CSS")]),v._v("、"),_("code",[v._v("JavaScript")]),v._v("脚本等资源，这些资源是需要从网络或者缓存中获取的，主线程在构建"),_("code",[v._v("DOM")]),v._v("过程中如果遇到了这些资源，逐一发起请求去获取，而为了提升效率，浏览器也会运行预加载扫描（"),_("code",[v._v("preload scanner")]),v._v("）程序，如果"),_("code",[v._v("HTML")]),v._v("中存在"),_("code",[v._v("img")]),v._v("、"),_("code",[v._v("link")]),v._v("等标签，预加载扫描程序会把这些请求传递给"),_("code",[v._v("Browser Process")]),v._v("的"),_("code",[v._v("network thread")]),v._v("进行资源下载。")])]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("Javascript的下载与执行")])]),v._v(" "),_("blockquote",[_("p",[v._v("构建DOM过程中，如果遇到"),_("code",[v._v("<script>")]),v._v("标签，渲染引擎会停止对"),_("code",[v._v("HTML")]),v._v("的解析，而去加载执行JS代码，原因在于JS代码可能会改变"),_("code",[v._v("DOM")]),v._v("的结构")])]),v._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[v._v("样式计算")])]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("DOM")]),v._v("树只是我们页面的结构，我们要知道页面长什么样子，我们还需要知道DOM的每一个节点的样式。主线程在解析页面时，遇到"),_("code",[v._v("<style>")]),v._v("标签或者"),_("code",[v._v("<link>")]),v._v("标签的"),_("code",[v._v("CSS")]),v._v("资源，会加载"),_("code",[v._v("CSS")]),v._v("代码，根据"),_("code",[v._v("CSS")]),v._v("代码确定每个"),_("code",[v._v("DOM")]),v._v("节点的计算样式（"),_("code",[v._v("computed style")]),v._v("）。")]),v._v(" "),_("p",[v._v("计算样式是主线程根据"),_("code",[v._v("CSS")]),v._v("样式选择器（"),_("code",[v._v("CSS selectors")]),v._v("）计算出的每个"),_("code",[v._v("DOM")]),v._v("元素应该具备的具体样式，即使你的页面没有设置任何自定义的样式，浏览器也会提供其默认的样式。")])]),v._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[v._v("布局")])]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("DOM")]),v._v("树和计算样式完成后，我们还需要知道每一个节点在页面上的位置，布局（"),_("code",[v._v("Layout")]),v._v("）其实就是找到所有元素的几何关系的过程。")]),v._v(" "),_("p",[v._v("主线程会遍历"),_("code",[v._v("DOM")]),v._v(" 及相关元素的计算样式，构建出包含每个元素的页面坐标信息及盒子模型大小的布局树（"),_("code",[v._v("Render Tree")]),v._v("），遍历过程中，会跳过隐藏的元素（"),_("code",[v._v("display: none")]),v._v("），另外，伪元素虽然在"),_("code",[v._v("DOM")]),v._v("上不可见，但是在布局树上是可见的。")])]),v._v(" "),_("ol",{attrs:{start:"6"}},[_("li",[v._v("绘制")])]),v._v(" "),_("blockquote",[_("p",[v._v("布局 "),_("code",[v._v("layout")]),v._v(" 之后，我们知道了不同元素的结构，样式，几何关系，我们要绘制出一个页面，我们要需要知道每个元素的绘制先后顺序，在绘制阶段，主线程会遍历布局树（"),_("code",[v._v("layout tree")]),v._v("），生成一系列的绘画记录（"),_("code",[v._v("paint records")]),v._v("）。绘画记录可以看做是记录各元素绘制先后顺序的笔记。")])]),v._v(" "),_("ol",{attrs:{start:"7"}},[_("li",[v._v("合成")])]),v._v(" "),_("blockquote",[_("p",[v._v("文档结构、元素的样式、元素的几何关系、绘画顺序，这些信息我们都有了，这个时候如果要绘制一个页面，我们需要做的是把这些信息转化为显示器中的像素，这个转化的过程，叫做"),_("strong",[v._v("光栅化（"),_("code",[v._v("rasterizing")]),v._v("）")]),v._v("。")])]),v._v(" "),_("blockquote",[_("p",[v._v("合成是一种将页面分成若干层，然后分别对它们进行光栅化，最后在一个单独的线程 - **合成线程（"),_("code",[v._v("compositor thread")]),v._v("）**里面合并成一个页面的技术。当用户滚动页面时，由于页面各个层都已经被光栅化了，浏览器需要做的只是合成一个新的帧来展示滚动后的效果罢了。页面的动画效果实现也是类似，将页面上的层进行移动并构建出一个新的帧即可。")])]),v._v(" "),_("p",[_("strong",[v._v("为了实现合成技术，我们需要对元素进行分层，确定哪些元素需要放置在哪一层，主线程需要遍历渲染树来创建一棵层次树（"),_("code",[v._v("Layer Tree")]),v._v("），对于添加了 "),_("code",[v._v("will-change")]),v._v("CSS 属性的元素，会被看做单独的一层，没有"),_("code",[v._v("will-change")]),v._v(" CSS属性的元素，浏览器会根据情况决定是否要把该元素放在单独的层。")])]),v._v(" "),_("blockquote",[_("p",[v._v("一旦"),_("code",[v._v("Layer Tress")]),v._v("被创建，渲染顺序被确定，主线程会把这些信息通知给合成器线程，合成器线程开始对层次数的每一层进行光栅化。有的层的可以达到整个页面的大小，所以合成线程需要将它们切分为一块又一块的小图块（"),_("code",[v._v("tiles")]),v._v("），之后将这些小图块分别进行发送给一系列光栅线程（"),_("code",[v._v("raster threads")]),v._v("）进行光栅化，结束后光栅线程会将每个图块的光栅结果存在"),_("code",[v._v("GPU Process")]),v._v("的内存中。")])]),v._v(" "),_("p",[_("img",{attrs:{src:"/dovis-blog/other/55.png",alt:"img"}})]),v._v(" "),_("blockquote",[_("p",[v._v("合成的好处在于这个过程没有涉及到主线程，所以合成线程不需要等待样式的计算以及JavaScript完成执行。这就是为什么合成器相关的动画最流畅，如果某个动画涉及到布局或者绘制的调整，就会涉及到主线程的重新计算，自然会慢很多。")])]),v._v(" "),_("ol",{attrs:{start:"8"}},[_("li",[v._v("浏览器对事件的处理")])]),v._v(" "),_("blockquote",[_("p",[v._v("当页面渲染完毕以后，"),_("code",[v._v("TAB")]),v._v("内已经显示出了可交互的"),_("code",[v._v("WEB")]),v._v("页面，用户可以进行移动鼠标、点击页面等操作了，而当这些事件发生时候，浏览器是如何处理这些事件的呢？")]),v._v(" "),_("p",[v._v("以点击事件（"),_("code",[v._v("click event")]),v._v("）为例，让鼠标点击页面时候，首先接受到事件信息的是"),_("code",[v._v("Browser Process")]),v._v("，但是"),_("code",[v._v("Browser Process")]),v._v("只知道事件发生的类型和发生的位置，具体怎么对这个点击事件进行处理，还是由"),_("code",[v._v("Tab")]),v._v("内的"),_("code",[v._v("Renderer Process")]),v._v("进行的。"),_("code",[v._v("Browser Process")]),v._v("接受到事件后，随后便把事件的信息传递给了渲染进程，渲染进程会找到根据事件发生的坐标，找到目标对象（"),_("code",[v._v("target")]),v._v("），并且运行这个目标对象的点击事件绑定的监听函数（"),_("code",[v._v("listener")]),v._v("）。")])]),v._v(" "),_("ol",{attrs:{start:"9"}},[_("li",[v._v("渲染进程中合成器线程接收事件\n"),_("img",{attrs:{src:"/dovis-blog/other/56.png",alt:"img"}})])]),v._v(" "),_("p",[_("strong",[v._v("开发者需要注意")])]),v._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[v._v("document"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("body"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("addEventListener")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v("'touchstart'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("event")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n  "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("if")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("event"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("target "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("===")]),v._v(" area"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    event"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("preventDefault")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v("\n  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v("\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br"),_("span",{staticClass:"line-number"},[v._v("2")]),_("br"),_("span",{staticClass:"line-number"},[v._v("3")]),_("br"),_("span",{staticClass:"line-number"},[v._v("4")]),_("br"),_("span",{staticClass:"line-number"},[v._v("5")]),_("br")])]),_("blockquote",[_("p",[v._v("这一段代码给"),_("code",[v._v("body")]),v._v("元素绑定了事件监听器，也就意味着整个页面都被编辑为一个非快速滚动区域，这会使得即使你的页面的某些区域没有绑定任何事件，每次用户触发事件时，合成器线程也需要和主线程通信并等待反馈，流畅的合成器独立处理合成帧的模式就失效了。"),_("strong",[v._v("解决方式：只需要在事件监听时传递"),_("code",[v._v("passtive")]),v._v("参数为 "),_("code",[v._v("true")]),v._v("，"),_("code",[v._v("passtive")]),v._v("会告诉浏览器你既要绑定事件，又要让组合器线程直接跳过主线程的事件处理直接合成创建组合帧。")])])]),v._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[v._v("document"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("body"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("addEventListener")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v("'touchstart'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("event")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("if")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("event"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("target "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("===")]),v._v(" area"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        event"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("preventDefault")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" \n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),_("span",{pre:!0,attrs:{class:"token literal-property property"}},[v._v("passive")]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token boolean"}},[v._v("true")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 顺从浏览器默认行为，所以preventDefault失效")]),v._v("\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br"),_("span",{staticClass:"line-number"},[v._v("2")]),_("br"),_("span",{staticClass:"line-number"},[v._v("3")]),_("br"),_("span",{staticClass:"line-number"},[v._v("4")]),_("br"),_("span",{staticClass:"line-number"},[v._v("5")]),_("br")])]),_("ol",{attrs:{start:"10"}},[_("li",[v._v("查找事件的目标对象（"),_("code",[v._v("event target")]),v._v("）")])]),v._v(" "),_("blockquote",[_("p",[v._v("当合成器线程接收到事件信息，判定到事件发生不在非快速滚动区域后，合成器线程会向主线程发送这个时间信息，主线程获取到事件信息的第一件事就是通过命中测试（"),_("code",[v._v("hit test")]),v._v("）去找到事件的目标对象。具体的命中测试流程是遍历在绘制阶段生成的绘画记录（"),_("code",[v._v("paint records")]),v._v("）来找到包含了事件发生坐标上的元素对象。")])]),v._v(" "),_("ol",{attrs:{start:"11"}},[_("li",[v._v("浏览器对事件的优化")])]),v._v(" "),_("blockquote",[_("p",[v._v("一般我们屏幕的帧率是每秒"),_("code",[v._v("60")]),v._v("帧，也就是"),_("code",[v._v("60fps")]),v._v("，但是某些事件触发的频率超过了这个数值，比如"),_("code",[v._v("wheel，mousewheel，mousemove，pointermove，touchmove")]),v._v("，这些连续性的事件一般每秒会触发"),_("code",[v._v("60~120")]),v._v("次，假如每一次触发事件都将事件发送到主线程处理，由于屏幕的刷新速率相对来说较低，这样使得主线程会触发过量的命中测试以及JS代码，使得性能有了没必要是损耗。")])]),v._v(" "),_("blockquote",[_("p",[v._v("出于优化的目的，浏览器会合并这些连续的事件，延迟到下一帧渲染时执行，也就是"),_("code",[v._v("requestAnimationFrame")]),v._v("之前。而对于非连续性的事件，如"),_("code",[v._v("keydown，keyup，mousedown，mouseup，touchstart，touchend")]),v._v("等，会直接派发给主线程去执行。")])])]),v._v(" "),_("h2",{attrs:{id:"如何优化单页应用首屏加载速度慢的问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何优化单页应用首屏加载速度慢的问题"}},[v._v("#")]),v._v(" 如何优化单页应用首屏加载速度慢的问题？")]),v._v(" "),_("ul",[_("li",[v._v("将公用的"),_("code",[v._v("JS")]),v._v("库通过"),_("code",[v._v("script")]),v._v("标签外部引入，减小 "),_("code",[v._v("app.bundel")]),v._v(" 的大小，让浏览器并行下载资源文件，提高下载速度；")]),v._v(" "),_("li",[v._v("在配置路由时，页面和组件使用懒加载的方式引入，进一步缩小 "),_("code",[v._v("app.bundel")]),v._v(" 的体积，在调用某个组件时再加载对应的"),_("code",[v._v("js")]),v._v("文件；")]),v._v(" "),_("li",[v._v("加一个首屏"),_("code",[v._v("loading")]),v._v("图，提升用户体验；")])]),v._v(" "),_("h2",{attrs:{id:"axios的特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#axios的特点"}},[v._v("#")]),v._v(" axios的特点")]),v._v(" "),_("ul",[_("li",[v._v("从浏览器中创建"),_("code",[v._v("XMLHttpRequests")]),v._v("；")]),v._v(" "),_("li",[_("code",[v._v("node.js")]),v._v("创建"),_("code",[v._v("http")]),v._v("请求；")])]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("axios")]),v._v("可以用在浏览器和 "),_("code",[v._v("node.js")]),v._v(" 中是因为，它会自动判断当前环境是什么，如果是浏览器，就会基于"),_("code",[v._v("XMLHttpRequests")]),v._v("实现"),_("code",[v._v("axios")]),v._v("。如果是"),_("code",[v._v("node.js")]),v._v("环境，就会基于"),_("code",[v._v("node")]),v._v("内置核心模块"),_("code",[v._v("http")]),v._v("实现"),_("code",[v._v("axios")])])]),v._v(" "),_("ul",[_("li",[v._v("支持"),_("code",[v._v("Promise API")]),v._v("；")]),v._v(" "),_("li",[v._v("拦截请求和响应；")]),v._v(" "),_("li",[v._v("转换请求数据和响应数据；")]),v._v(" "),_("li",[v._v("取消请求；")]),v._v(" "),_("li",[v._v("自动换成"),_("code",[v._v("json")]),v._v("。")]),v._v(" "),_("li",[_("code",[v._v("axios")]),v._v("中的发送字段的参数是"),_("code",[v._v("data")]),v._v("跟"),_("code",[v._v("params")]),v._v("两个，两者的区别在于"),_("code",[v._v("params")]),v._v("是跟请求地址一起发送的，"),_("code",[v._v("data")]),v._v("的作为一个请求体进行发送")]),v._v(" "),_("li",[_("code",[v._v("params")]),v._v("一般适用于"),_("code",[v._v("get")]),v._v("请求，"),_("code",[v._v("data")]),v._v("一般适用于"),_("code",[v._v("post put")]),v._v(" 请求。")]),v._v(" "),_("li",[v._v("客户端支持防御"),_("code",[v._v("CSRF")])])])])}),[],!1,null,null,null);_.default=s.exports}}]);