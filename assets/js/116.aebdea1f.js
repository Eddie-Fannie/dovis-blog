(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{389:function(v,_,o){"use strict";o.r(_);var c=o(10),e=Object(c.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"tcp和udp"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp和udp"}},[v._v("#")]),v._v(" "),_("code",[v._v("TCP")]),v._v("和"),_("code",[v._v("UDP")])]),v._v(" "),_("p",[_("strong",[v._v("计算机网络体系结构")])]),v._v(" "),_("p",[_("img",{attrs:{src:"/dovis-blog/other/10.png",alt:"img"}})]),v._v(" "),_("h2",{attrs:{id:"tcp-ip-传输控制协议-网际协议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip-传输控制协议-网际协议"}},[v._v("#")]),v._v(" "),_("code",[v._v("TCP/IP")]),v._v("（传输控制协议/网际协议）")]),v._v(" "),_("ol",[_("li",[v._v("应用层")]),v._v(" "),_("li",[v._v("传输层")])]),v._v(" "),_("blockquote",[_("p",[v._v("传输层(transport layer)的主要任务就是负责向两台主机进程之间的通信提供通用的数据传输服务。")])]),v._v(" "),_("table",[_("thead",[_("tr",[_("th"),v._v(" "),_("th",[v._v("UDP")]),v._v(" "),_("th",[v._v("TCP")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("是否连接")]),v._v(" "),_("td",[v._v("无连接")]),v._v(" "),_("td",[v._v("面向连接")])]),v._v(" "),_("tr",[_("td",[v._v("是否可靠")]),v._v(" "),_("td",[v._v("不可靠传输，不使用流量控制和拥塞控制")]),v._v(" "),_("td",[v._v("可靠传输，使用流量控制和拥塞控制")])]),v._v(" "),_("tr",[_("td",[v._v("连接对象个数")]),v._v(" "),_("td",[v._v("支持一对一，一对多等多种方式通信")]),v._v(" "),_("td",[v._v("只能一对一")])]),v._v(" "),_("tr",[_("td",[v._v("传输方式")]),v._v(" "),_("td",[v._v("面向报文")]),v._v(" "),_("td",[v._v("面向字节流")])]),v._v(" "),_("tr",[_("td",[v._v("首部开销")]),v._v(" "),_("td",[v._v("小，仅8子节")]),v._v(" "),_("td",[v._v("首部最小20，最大60子节")])]),v._v(" "),_("tr",[_("td",[v._v("场景")]),v._v(" "),_("td",[v._v("适用实时应用")]),v._v(" "),_("td",[v._v("适用可靠传输的应用，文件传输")])])])]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("TCP")]),v._v("和"),_("code",[v._v("UDP")]),v._v("区别：\n"),_("ul",[_("li",[_("code",[v._v("TCP")]),v._v("提供可靠的服务。也就是说，通过"),_("code",[v._v("TCP")]),v._v("连接传送的数据，无差错，不丢失，不重复，且按序到达;"),_("code",[v._v("UDP")]),v._v("尽最大努力交付，即不保证可靠交付。并且因为"),_("code",[v._v("tcp")]),v._v("可靠，面向连接，不会丢失数据因此适合大数据量的交换。")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v("是面向字节流，"),_("code",[v._v("UDP")]),v._v("面向报文，并且网络出现拥塞不会使得发送速率降低（因此会出现丢包，对实时的应用比如IP电话和视频会议等）。")])])])]),v._v(" "),_("p",[v._v("我们知道 "),_("code",[v._v("TCP")]),v._v(" 协议是面向连接的，其需要三次握手才可以连接连接，其还可以做到丢失重传、顺序控制、拥塞控制、流量控制等功能，并且保证连接的可靠性，而 "),_("code",[v._v("UDP")]),v._v(" 协议不需要考虑那么多，其只需要尽快的将应用程序的报文传递给网络层便好，所以总结就是 "),_("code",[v._v("TCP")]),v._v(" 协议主要用于那些需要可靠通信的，对连接的速度要求相对来说不那么高的情况，而 "),_("code",[v._v("UDP")]),v._v(" 协议用在那些需要快速进行通信，不需要保证通信可靠的场合。\n具体例子：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("UDP")]),v._v("："),_("code",[v._v("DNS")]),v._v(" 服务（向 "),_("code",[v._v("DNS")]),v._v(" 服务器发送请求解析域名）、视频通话、QQ 聊天、多媒体广播")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v("：我们最常用的 "),_("code",[v._v("HTTP")]),v._v(" 协议，邮件，QQ 传文件，登录")])]),v._v(" "),_("ul",[_("li",[_("p",[_("code",[v._v("UDP")]),v._v(" 的特点主要有")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("UDP")]),v._v(" 能够支持容忍数据包丢失的带宽密集型应用程序")]),v._v(" "),_("li",[_("code",[v._v("UDP")]),v._v(" 具有低延迟的特点")]),v._v(" "),_("li",[_("code",[v._v("UDP")]),v._v(" 能够发送大量的数据包")]),v._v(" "),_("li",[_("code",[v._v("UDP")]),v._v(" 能够允许 "),_("code",[v._v("DNS")]),v._v(" 查找，"),_("code",[v._v("DNS")]),v._v(" 是建立在 "),_("code",[v._v("UDP")]),v._v(" 之上的应用层协议。")])])]),v._v(" "),_("li",[_("p",[_("code",[v._v("TCP")]),v._v(" 的主要特点有")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("TCP")]),v._v(" 能够确保连接的建立和数据包的发送")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v(" 支持错误重传机制")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v(" 支持拥塞控制，能够在网络拥堵的情况下延迟发送")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v(" 能够提供错误校验和，甄别有害的数据包。")])])])])]),v._v(" "),_("h2",{attrs:{id:"tcp特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp特点"}},[v._v("#")]),v._v(" "),_("code",[v._v("TCP")]),v._v("特点")]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("TCP")]),v._v("提供全双工通信。"),_("code",[v._v("TCP")]),v._v("允许通信双方的应用进程在任何时候都能发送数据。"),_("code",[v._v("TCP")]),v._v("连接的两端都设有发送缓存和接收缓存，用来临时存放双向通信的数据。在发送时，应用程序在把数据传送给"),_("code",[v._v("TCP")]),v._v("的缓存后，就可以做自己的事，而"),_("code",[v._v("TCP")]),v._v("在合适的时候把数据发送出去。在接收时，"),_("code",[v._v("TCP")]),v._v("把收到的数据放入缓存，上层的应用进程在合适的时候读取缓存中的数据。")])]),v._v(" "),_("ol",[_("li",[_("code",[v._v("TCP")]),v._v("连接的端点叫做套接字（"),_("code",[v._v("IP")]),v._v("地址:端口号)")])]),v._v(" "),_("h2",{attrs:{id:"可靠传输的工作原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#可靠传输的工作原理"}},[v._v("#")]),v._v(" 可靠传输的工作原理")]),v._v(" "),_("ul",[_("li",[v._v("理想传输条件特点：\n"),_("ul",[_("li",[v._v("传输信道不产生差错")]),v._v(" "),_("li",[v._v("不管发送方以多快速度发送数据，接收方总是来得及处理收到的数据。")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("实际的网络都不具备以上两个理想条件。但我们可以使用一些可靠传输协议，当出现差错时让发送方重传出现差错的数据，同时在接收方来不及处理收到的数据时，及时告诉发送方适当降低发送数据的速度。这样一来，本来是不可靠的传输信道就能够实现可靠传输了。")])]),v._v(" "),_("h2",{attrs:{id:"停止等待协议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#停止等待协议"}},[v._v("#")]),v._v(" 停止等待协议")]),v._v(" "),_("ol",[_("li",[v._v("可靠传输协议是这样设计的：发送方只要超过了一段时间仍然没有收到确认，就认为刚才发送的分组丢失了，因而重传前面发送过的分组。这就叫做"),_("strong",[v._v("超时重传")]),v._v("。要实现超时重传，就要在每发送完一个分组设置一个超时计时器。如果在超时计时器到期之前收到了对方的确认，就撤销已设置的超时计时器。")])]),v._v(" "),_("h2",{attrs:{id:"tcp的三次握手和四次挥手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp的三次握手和四次挥手"}},[v._v("#")]),v._v(" TCP的三次握手和四次挥手")]),v._v(" "),_("blockquote",[_("p",[v._v("一个"),_("code",[v._v("TCP")]),v._v("连接由一个"),_("code",[v._v("4")]),v._v("元组构成，分别是两个"),_("code",[v._v("IP")]),v._v("地址和两个端口号（源端口和目的端口号，各占2个字节）。一个"),_("code",[v._v("TCP")]),v._v("连接通常分为三个阶段："),_("strong",[v._v("连接")]),v._v("、"),_("strong",[v._v("数据传输")]),v._v("、"),_("strong",[v._v("退出（关闭）")]),v._v("。"),_("strong",[v._v("通过三次握手建立一个链接，通过四次挥手来关闭一个连接。")]),v._v(" "),_("strong",[v._v("当一个连接被建立或被终止时，交换的报文段只包含"),_("code",[v._v("TCP")]),v._v("头部，而没有数据。")])])]),v._v(" "),_("p",[_("code",[v._v("TCP")]),v._v("报文头部结构\n"),_("img",{attrs:{src:"/dovis-blog/other/11.png",alt:"img"}})]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("p",[_("code",[v._v("TCP")]),v._v("报文段首部的前"),_("code",[v._v("20")]),v._v("个字节是固定，后面有"),_("code",[v._v("4n")]),v._v("字节是根据需要而增加的选项("),_("code",[v._v("n")]),v._v("是整数)。因此"),_("code",[v._v("TCP")]),v._v("首部的最小长度是"),_("code",[v._v("20")]),v._v("字节")])]),v._v(" "),_("ul",[_("li",[v._v("重点字段\n"),_("ul",[_("li",[_("code",[v._v("seq")]),v._v("序号：占"),_("code",[v._v("32")]),v._v("位，用来标识"),_("code",[v._v("TCP")]),v._v("源向目的端发送的字节流，发送方发送数据时对此进行标记")]),v._v(" "),_("li",[v._v("确认序号："),_("code",[v._v("ack")]),v._v("序号，占"),_("code",[v._v("32")]),v._v("位，只有"),_("code",[v._v("ACK")]),v._v("标志位为"),_("code",[v._v("1")]),v._v("时，确认序号字段才有效，"),_("code",[v._v("ack=seq+1")]),v._v("。("),_("strong",[v._v("期望收到对方下一个报文段的第一个数据字节的序号")]),v._v(")")]),v._v(" "),_("li",[v._v("标志位\n"),_("ul",[_("li",[_("code",[v._v("ACK(acknowledge)")]),v._v("：确认序号有效")]),v._v(" "),_("li",[_("code",[v._v("FIN(finish)")]),v._v("：释放一个连接")]),v._v(" "),_("li",[_("code",[v._v("PSH")]),v._v("：接收方应该尽快将这个报文交给应用层")]),v._v(" "),_("li",[_("code",[v._v("RST")]),v._v("：重置连接")])]),v._v(" "),_("blockquote",[_("p",[v._v("当"),_("code",[v._v("RST = 1")]),v._v("时，表明"),_("code",[v._v("TCP")]),v._v("连接中出现严重差错（如由于主机崩溃或其他原因），必须释放连接，然后再重新建立运输连接。"),_("code",[v._v("RST")]),v._v("置"),_("code",[v._v("1")]),v._v("还用来拒绝一个非法的报文段或拒绝打开一个连接。"),_("code",[v._v("RST")]),v._v("也可称为重建位或重置位。")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("SYN(synchronize)")]),v._v("：发起一个新连接")]),v._v(" "),_("li",[_("code",[v._v("URG")]),v._v("：紧急指针有效("),_("code",[v._v("URG")]),v._v("=1时)")])])])])])]),v._v(" "),_("h3",{attrs:{id:"三次握手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[v._v("#")]),v._v(" 三次握手")]),v._v(" "),_("blockquote",[_("p",[v._v("确认通信双方收发数据的能力")])]),v._v(" "),_("p",[v._v("三次握手过程")]),v._v(" "),_("p",[_("img",{attrs:{src:"/dovis-blog/other/12.png",alt:"img"}})]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("第一次握手：")]),v._v(" 客户端向服务端发送请求，首先客户端随机生成一个起始序列号"),_("code",[v._v("ISN")]),v._v("（比如是"),_("code",[v._v("100")]),v._v("），那客户端向服务端发送的报文段包含"),_("code",[v._v("SYN")]),v._v("标志位（也就是"),_("code",[v._v("SYN=1")]),v._v("，序列号"),_("code",[v._v("seq=100")]),v._v("。"),_("strong",[v._v("要消耗一个序号"),_("code",[v._v("seq")])])]),v._v(" "),_("li",[_("strong",[v._v("第二次握手：")]),v._v(" 服务端收到客户端发过来的报文后，发现"),_("code",[v._v("SYN=1")]),v._v("，知道这是一个连接请求，于是将客户端的起始序列号"),_("code",[v._v("100")]),v._v("存起来，并且随机生成一个服务端的起始序列号(比如是"),_("code",[v._v("300")]),v._v(")。然后给客户端回复一段报文，回复报文包含"),_("code",[v._v("SYN")]),v._v("和"),_("code",[v._v("ACK")]),v._v("标志(也就是"),_("code",[v._v("SYN=1,ACK=1")]),v._v(")、序列号"),_("code",[v._v("seq=300")]),v._v("、确认号"),_("code",[v._v("ack=101")]),v._v("(客户端发过来的序列号"),_("code",[v._v("+1")]),v._v(")。")]),v._v(" "),_("li",[_("strong",[v._v("第三次握手：")]),v._v(" 客户端收到服务端的回复后发现"),_("code",[v._v("ACK=1")]),v._v("并且"),_("code",[v._v("ack=101")]),v._v(",于是知道服务端已经收到了序列号为"),_("code",[v._v("100")]),v._v("的那段报文；同时发现"),_("code",[v._v("SYN=1")]),v._v("，知道了服务端同意了这次连接，于是就将服务端的序列号"),_("code",[v._v("300")]),v._v("给存下来。然后客户端再回复一段报文给服务端，报文包含"),_("code",[v._v("ACK")]),v._v("标志位("),_("code",[v._v("ACK=1")]),v._v(")、"),_("code",[v._v("ack=301")]),v._v("(服务端序列号"),_("code",[v._v("+1")]),v._v(")、"),_("code",[v._v("seq=101")]),v._v("(第一次握手时发送报文是占据一个序列号的，所以这次"),_("code",[v._v("seq")]),v._v("就从"),_("code",[v._v("101")]),v._v("开始，需要注意的是不携带数据的"),_("code",[v._v("ACK")]),v._v("报文是不占据序列号的，所以后面第一次正式发送数据时"),_("code",[v._v("seq")]),v._v("还是"),_("code",[v._v("101")]),v._v(")。当服务端收到报文后发现"),_("code",[v._v("ACK=1")]),v._v("并且"),_("code",[v._v("ack=301")]),v._v("，就知道客户端收到序列号为"),_("code",[v._v("300")]),v._v("的报文了，就这样客户端和服务端通过"),_("code",[v._v("TCP")]),v._v("建立了连接。")])]),v._v(" "),_("h3",{attrs:{id:"四次挥手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[v._v("#")]),v._v(" 四次挥手")]),v._v(" "),_("blockquote",[_("p",[v._v("四次挥手的目的是关闭一个连接")])]),v._v(" "),_("p",[_("img",{attrs:{src:"/dovis-blog/other/13.jpg",alt:"img"}})]),v._v(" "),_("blockquote",[_("p",[v._v("比如客户端初始化的序列号"),_("code",[v._v("ISA=100")]),v._v("，服务端初始化的序列号"),_("code",[v._v("ISA=300")]),v._v("。"),_("code",[v._v("TCP")]),v._v("连接成功后客户端总共发送了"),_("code",[v._v("1000")]),v._v("个字节的数据，服务端在客户端发"),_("code",[v._v("FIN")]),v._v("报文前总共回复了"),_("code",[v._v("2000")]),v._v("个字节的数据。")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("第一次挥手:")]),v._v(" 当客户端的数据都传输完成后，客户端向服务端发出连接释放报文(当然数据没发完时也可以发送连接释放报文并停止发送数据)，释放连接报文包含"),_("code",[v._v("FIN")]),v._v("标志位("),_("code",[v._v("FIN=1")]),v._v(")、序列号"),_("code",[v._v("seq=1101")]),v._v("("),_("code",[v._v("100+1+1000")]),v._v("，其中的"),_("code",[v._v("1")]),v._v("是建立连接时占的一个序列号)。需要注意的是客户端发出"),_("code",[v._v("FIN")]),v._v("报文段后只是不能发数据了，但是还可以正常收数据；另外"),_("code",[v._v("FIN")]),v._v("报文段即使不携带数据也要占据一个序列号。")]),v._v(" "),_("li",[_("strong",[v._v("第二次挥手：")]),v._v(" 服务端收到客户端发的"),_("code",[v._v("FIN")]),v._v("报文后给客户端回复确认报文，确认报文包含"),_("code",[v._v("ACK")]),v._v("标志位("),_("code",[v._v("ACK=1")]),v._v(")、确认号"),_("code",[v._v("ack=1102")]),v._v("(客户端"),_("code",[v._v("FIN")]),v._v("报文序列号"),_("code",[v._v("1101+1")]),v._v(")、序列号"),_("code",[v._v("seq=2300")]),v._v("("),_("code",[v._v("300+2000")]),v._v(")。此时服务端处于关闭等待状态，而不是立马给客户端发"),_("code",[v._v("FIN")]),v._v("报文，这个状态还要持续一段时间，因为服务端可能还有数据没发完。")]),v._v(" "),_("li",[_("strong",[v._v("第三次挥手：")]),v._v(" 服务端将最后数据(比如"),_("code",[v._v("50")]),v._v("个字节)发送完毕后就向客户端发出连接释放报文，报文包含"),_("code",[v._v("FIN")]),v._v("和"),_("code",[v._v("ACK")]),v._v("标志位("),_("code",[v._v("FIN=1,ACK=1")]),v._v(")、确认号和第二次挥手一样"),_("code",[v._v("ack=1102")]),v._v("、序列号"),_("code",[v._v("seq=2350(2300+50)")])]),v._v(" "),_("li",[_("strong",[v._v("第四次挥手：")]),v._v(" 客户端收到服务端发的"),_("code",[v._v("FIN")]),v._v("报文后，向服务端发出确认报文，确认报文包含"),_("code",[v._v("ACK")]),v._v("标志位("),_("code",[v._v("ACK=1")]),v._v(")、确认号"),_("code",[v._v("ack=2351")]),v._v("、序列号"),_("code",[v._v("seq=1102")]),v._v("。注意客户端发出确认报文后不是立马释放"),_("code",[v._v("TCP")]),v._v("连接，而是要经过"),_("code",[v._v("2MSL")]),v._v("(最长报文段寿命的"),_("code",[v._v("2")]),v._v("倍时长)后才释放"),_("code",[v._v("TCP")]),v._v("连接。而服务端一旦收到客户端发出的确认报文就会立马释放"),_("code",[v._v("TCP")]),v._v("连接，所以服务端结束"),_("code",[v._v("TCP")]),v._v("连接的时间要比客户端早一些。")])]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("p",[_("code",[v._v("SYN")]),v._v("报文：起标识作用的家伙。当"),_("code",[v._v("SYN=1")]),v._v("而"),_("code",[v._v("ACK=0")]),v._v("时，表明这是一个连接请求报文。对方若同意建立连接，则应在响应报文中使用"),_("code",[v._v("SYN=1")]),v._v("和"),_("code",[v._v("ACK=1")]),v._v("，因此"),_("code",[v._v("SYN")]),v._v("置于"),_("code",[v._v("1")]),v._v("就表示这是一个连接请求或连接接受报文。")]),v._v(" "),_("p",[_("code",[v._v("ACK")]),v._v("报文："),_("code",[v._v("TCP")]),v._v("协议规定，只有"),_("code",[v._v("ACK=1")]),v._v("时有效，也规定连接建立后所有发送的报文的"),_("code",[v._v("ACK")]),v._v("必须为"),_("code",[v._v("1")])]),v._v(" "),_("p",[_("code",[v._v("FIN")]),v._v("报文："),_("code",[v._v("FIN=1")]),v._v("表示此报文段的发送方的数据已经发送完毕，请求释放运输连接")])]),v._v(" "),_("h2",{attrs:{id:"tcp常见面试题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp常见面试题"}},[v._v("#")]),v._v(" "),_("code",[v._v("TCP")]),v._v("常见面试题")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("TCP")]),v._v("建立连接，客户端突然出现故障？")])]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("TCP")]),v._v("设有一个保活计时器，客户端如果出现故障，服务器不能一直等下去，白白浪费资源。服务器每收到一次客户端的请求后都会重新复位这个计时器，时间通常是设置为"),_("code",[v._v("2")]),v._v("小时，若两小时还没有收到客户端的任何数据，服务器就会发送一个探测报文段，以后每隔"),_("code",[v._v("75")]),v._v("秒钟发送一次。若一连发送"),_("code",[v._v("10")]),v._v("个探测报文仍然没反应，服务器就认为客户端出了故障，接着就关闭连接。")])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li")]),v._v(" "),_("p",[_("img",{attrs:{src:"/dovis-blog/other/13.png",alt:"img"}})]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("如果是三次挥手会有什么问题？等于说服务端将"),_("code",[v._v("ACK")]),v._v("和"),_("code",[v._v("FIN")]),v._v("的发送合并为一次挥手，长时间的延迟可能会导致客户端误以为"),_("code",[v._v("FIN")]),v._v("没有到达客户端，从而让客户端不断的重发FIN。")])])])}),[],!1,null,null,null);_.default=e.exports}}]);